{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/ResetParameters/ResetParameters.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","js/colorMaker.js","js/theFirstLetterToUpperCase.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/ResetParameters/ResetParameters.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","btnStyle","backgroundColor","Math","random","toString","substring","FeedbackOptions","onLeaveFeedback","options","s","buttons","map","option","button","type","onClick","style","word","replace","match","toUpperCase","Statistics","good","neutral","bad","total","positivePercentage","counters","counter","counterBad","percent","Notification","message","notification","ResetParameters","reset","App","state","props","feedbackKey","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","floor","resetParameters","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b286cb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counters\":\"Statistics_counters__2SQla\",\"counter\":\"Statistics_counter__Z_x9a\",\"counterBad\":\"Statistics_counterBad__2zB6z\",\"total\":\"Statistics_total__2pGqP\",\"percent\":\"Statistics_percent__1qfaV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__2qTWo\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ResetParameters_button__19DnP\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './FeedbackOptions.module.css';\nimport colorMaker from '../../js/colorMaker';\nimport theFirstLetterToUpperCase from '../../js/theFirstLetterToUpperCase';\n\nexport const btnStyle = { backgroundColor: colorMaker() };\n\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => (\n  <div className={s.buttons}>\n    {options.map(option => (\n      <button\n        key={option}\n        className={s.button}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(option)}\n        style={btnStyle}\n      >\n        {theFirstLetterToUpperCase(option)}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default FeedbackOptions;\n","export default function colorMaker() {\n  return '#' + (Math.random().toString(16) + '000000').substring(2, 8) + '80';\n}\n","export default function theFirstLetterToUpperCase(word) {\n  return word.replace(/(^\\w{1})/, match => match.toUpperCase());\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={s.counters}>\n    <span className={s.counter}>Good: {good}</span>\n    <span className={s.counter}>Neutral: {neutral}</span>\n    <span className={s.counterBad}>Bad: {bad}</span>\n    <span className={s.counter}>\n      <span className={s.total}>Total: </span>\n      {total}\n    </span>\n    <span className={s.counter}>\n      <span className={s.percent}>Positive feedback: </span>\n      {positivePercentage}\n    </span>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <p className={s.notification}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './ResetParameters.module.css';\nimport { btnStyle } from '../FeedbackOptions/FeedbackOptions';\n\nconst ResetParameters = ({ reset }) => (\n  <button className={s.button} type=\"button\" onClick={reset} style={btnStyle}>\n    Reset\n  </button>\n);\n\nResetParameters.propTypes = {\n  reset: PropTypes.func.isRequired,\n};\n\nexport default ResetParameters;\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\nimport ResetParameters from './components/ResetParameters';\n\nclass App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  onLeaveFeedback = feedbackKey => {\n    this.setState(prevState => ({ [feedbackKey]: prevState[feedbackKey] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return this.countTotalFeedback()\n      ? `${Math.floor((good / this.countTotalFeedback()) * 100)}%`\n      : '0%';\n  };\n\n  resetParameters = () => {\n    this.setState({ good: 0, neutral: 0, bad: 0 });\n  };\n\n  render() {\n    return (\n      <div className=\"statistics\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {!this.countTotalFeedback() ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <>\n              <Statistics\n                good={this.state.good}\n                neutral={this.state.neutral}\n                bad={this.state.bad}\n                total={this.countTotalFeedback()}\n                positivePercentage={this.countPositiveFeedbackPercentage()}\n              />\n              <ResetParameters reset={this.resetParameters} />\n            </>\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}